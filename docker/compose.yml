version: '3.8'

services:
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/priyabratamo/ytclipper/backend:latest}
    container_name: ytclipper-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENV=${ENV:-staging}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_PRETTY=${LOG_PRETTY:-true}
      - API_TIMEOUT=${API_TIMEOUT:-30s}
      - AUTH0_SCOPE='openid profile email'
      - GIN_MODE=${GIN_MODE:-release}
    ports:
      - '${BACKEND_PORT:-8080}:8080'
    networks:
      - ytclipper-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  app:
    image: ${FRONTEND_IMAGE:-ghcr.io/priyabratamo/ytclipper/frontend:latest}
    container_name: ytclipper-app
    restart: unless-stopped
    ports:
      - '3000:80'
    depends_on:
      - backend
    networks:
      - ytclipper-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ytclipper-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - ytclipper-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  ytclipper-network:
    driver: bridge
