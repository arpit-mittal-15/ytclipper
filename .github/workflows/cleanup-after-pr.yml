name: üßπ Unified Cleanup After PR Merge

on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    name: Cleanup Both Services on PR Merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Extract Branch Name
        id: extract
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          SAFE_BRANCH=$(echo "$BRANCH" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          echo "safe_branch=$SAFE_BRANCH" >> $GITHUB_OUTPUT
          echo "Cleaning up resources for branch: $SAFE_BRANCH"

      - name: Cleanup from VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            SAFE_BRANCH="${{ steps.extract.outputs.safe_branch }}"

            # Skip cleanup for protected branches
            if [[ "$SAFE_BRANCH" == "main" || "$SAFE_BRANCH" == "staging" ]]; then
              echo "‚è© Skipping cleanup for protected branch: $SAFE_BRANCH"
              exit 0
            fi

            echo "üîç Starting cleanup for branch: $SAFE_BRANCH"

            # Backend resources
            BACKEND_CONTAINER="backend${SAFE_BRANCH}"
            BACKEND_COMPOSE_DIR="/opt/ytclipper-staging/$SAFE_BRANCH"
            BACKEND_DOMAIN="api.$SAFE_BRANCH.ytclipper.com"

            # Frontend resources
            FRONTEND_CONTAINER="frontend${SAFE_BRANCH}"
            FRONTEND_COMPOSE_DIR="/opt/ytclipper-frontend-staging/$SAFE_BRANCH"
            FRONTEND_DOMAIN="$SAFE_BRANCH.ytclipper.com"

            # Remove Docker containers
            docker rm -f $BACKEND_CONTAINER $FRONTEND_CONTAINER || true

            # Remove deployment directories
            rm -rf "$BACKEND_COMPOSE_DIR" "$FRONTEND_COMPOSE_DIR"

            # Remove Nginx configurations
            sudo rm -f "/etc/nginx/sites-available/$BACKEND_DOMAIN" \
                       "/etc/nginx/sites-enabled/$BACKEND_DOMAIN" \
                       "/etc/nginx/sites-available/$FRONTEND_DOMAIN" \
                       "/etc/nginx/sites-enabled/$FRONTEND_DOMAIN"

            # Prune unused Docker images
            docker image prune -af --filter "label=org.opencontainers.image.title=*$SAFE_BRANCH*"

            # Reload Nginx if configs changed
            if sudo nginx -t; then
              sudo systemctl reload nginx
              echo "‚ôªÔ∏è Nginx reloaded successfully"
            else
              echo "‚ö†Ô∏è Nginx config test failed - check configs manually"
            fi

            echo "‚úÖ Unified cleanup completed for $SAFE_BRANCH"
            echo "Removed:"
            echo "- Containers: $BACKEND_CONTAINER, $FRONTEND_CONTAINER"
            echo "- Directories: $BACKEND_COMPOSE_DIR, $FRONTEND_COMPOSE_DIR"
            echo "- Domains: $BACKEND_DOMAIN, $FRONTEND_DOMAIN"
